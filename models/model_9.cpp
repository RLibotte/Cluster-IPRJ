////////////////////////////////////////////////////////////////
//                                                            //
//         Universidade do Estado do Rio de Janeiro           //
//                    Instituto Politécnico                   //
//                           PPGMC                            //
//                                                            //
//              Simulador Transporte de Nêutrons              //
//                                                            //
//               Autor: Rafael Barbosa Libotte                //
//                                                            //
////////////////////////////////////////////////////////////////

using namespace std;

tuple<int, int, int, int, vector<double>, vector<vector<double>>, vector<vector<double>>, 
      vector<vector<vector<double>>>,vector<vector<vector<double>>>, vector<vector<double>>, 
      vector<vector<vector<double>>>,vector<vector<vector<double>>>, 
      vector<int>, vector<int>, int, double, double> get_model(){

    const int R = 4;
    const int Z = 3;
    const int G = 10;
    const int L = 1;

    //////////////////////////////////////////////////////////////////////////////////////////////////////////

    vector<int> zone_config = {1,2,3,1};

    vector<vector <double>> sigmat = {{0.09336110292803924, 0.09879783723951586, 0.10135247629124758, 0.1060572674226889, 0.10995195497217593, 0.12069864624647896, 0.1631129034978853, 0.2094580330094419, 0.21494192176162105, 0.24817782368643418, 0.2906514255267066, 0.39379669858305205, 0.45065706268873335, 0.6532544985990435, 0.6968346235876413, 0.906214739303202, 1.1694258939340028, 1.3278296710406805, 1.411490271907792, 1.5052867516939874, 1.4428961129667925, 1.4469847481306346, 1.448805008119858, 1.4499404192844543, 1.4513807855022547, 1.4543761850433743, 1.4614989500773454, 1.4796055260362129, 1.5357361697567384, 2.0144372834422373},
                                      {1.261876726359118e-01, 2.523753452718236e-01, 3.785630179077354e-01, 5.047506905436473e-01, 4.416568542256913e-01, 7.571260358154709e-01, 8.833137084513827e-01, 1.009501381087295e+00, 1.135689053723206e+00, 1.072595217405250e+00},
                                      {1.575950986520658e-01, 3.151901973041315e-01, 4.727852959561972e-01, 6.303803946082630e-01, 5.515828452822300e-01, 9.455705919123943e-01, 1.103165690564460e+00, 1.260760789216526e+00, 1.418355887868592e+00, 1.339558338542559e+00}};


    vector<vector<vector<double>>> sigmas0 = {{{1.000000000000000e-02, 5.000000000000000e-03, 3.333333333333334e-03, 2.500000000000000e-03, 2.000000000000000e-03, 1.666666666666667e-03, 1.428571428571429e-03, 1.250000000000000e-03, 1.111111111111111e-03, 1.000000000000000e-03},
                                               {0.000000000000000e+00, 2.000000000000000e-02, 1.000000000000000e-02, 6.666666666666667e-03, 5.000000000000000e-03, 4.000000000000000e-03, 3.333333333333334e-03, 2.857142857142857e-03, 2.500000000000000e-03, 2.222222222222222e-03},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 3.000000000000000e-02, 1.500000000000000e-02, 1.000000000000000e-02, 7.500000000000000e-03, 6.000000000000000e-03, 5.000000000000000e-03, 4.285714285714286e-03, 3.750000000000000e-03},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 4.000000000000000e-02, 2.000000000000000e-02, 1.333333333333333e-02, 1.000000000000000e-02, 8.000000000000000e-03, 6.666666666666667e-03, 5.714285714285714e-03},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 5.000000000000000e-02, 2.500000000000000e-02, 1.666666666666667e-02, 1.250000000000000e-02, 1.000000000000000e-02, 8.333333333333333e-03},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 6.000000000000000e-02, 3.000000000000000e-02, 2.000000000000000e-02, 1.500000000000000e-02, 1.200000000000000e-02},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 7.000000000000001e-02, 3.500000000000000e-02, 2.333333333333333e-02, 1.750000000000000e-02},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 8.000000000000000e-02, 4.000000000000000e-02, 2.666666666666667e-02},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 9.000000000000000e-02, 4.500000000000000e-02},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 1.000000000000000e-01}},
                                          
                                              {{1.047619047619048e-02, 5.238095238095239e-03, 3.492063492063492e-03, 2.619047619047619e-03, 2.095238095238095e-03, 1.746031746031746e-03, 1.496598639455782e-03, 1.309523809523810e-03, 1.164021164021164e-03, 1.047619047619048e-03},
                                               {0.000000000000000e+00, 2.095238095238095e-02, 1.047619047619048e-02, 6.984126984126985e-03, 5.238095238095239e-03, 4.190476190476191e-03, 3.492063492063492e-03, 2.993197278911565e-03, 2.619047619047619e-03, 2.328042328042328e-03},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 3.142857142857143e-02, 1.571428571428572e-02, 1.047619047619048e-02, 7.857142857142858e-03, 6.285714285714286e-03, 5.238095238095239e-03, 4.489795918367347e-03, 3.928571428571429e-03},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 4.190476190476191e-02, 2.095238095238095e-02, 1.396825396825397e-02, 1.047619047619048e-02, 8.380952380952381e-03, 6.984126984126985e-03, 5.986394557823130e-03},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 5.238095238095239e-02, 2.619047619047619e-02, 1.746031746031746e-02, 1.309523809523810e-02, 1.047619047619048e-02, 8.730158730158730e-03},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 6.285714285714286e-02, 3.142857142857143e-02, 2.095238095238095e-02, 1.571428571428572e-02, 1.257142857142857e-02},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 7.333333333333335e-02, 3.666666666666667e-02, 2.444444444444445e-02, 1.833333333333334e-02},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 8.380952380952382e-02, 4.190476190476191e-02, 2.793650793650794e-02},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 9.428571428571429e-02, 4.714285714285715e-02},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 1.047619047619048e-01}}, 

                                              {{1.095238095238095e-02, 5.476190476190477e-03, 3.650793650793651e-03, 2.738095238095238e-03, 2.190476190476191e-03, 1.825396825396826e-03, 1.564625850340136e-03, 1.369047619047619e-03, 1.216931216931217e-03, 1.095238095238095e-03},
                                               {0.000000000000000e+00, 2.190476190476191e-02, 1.095238095238095e-02, 7.301587301587303e-03, 5.476190476190477e-03, 4.380952380952381e-03, 3.650793650793651e-03, 3.129251700680272e-03, 2.738095238095238e-03, 2.433862433862434e-03},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 3.285714285714286e-02, 1.642857142857143e-02, 1.095238095238095e-02, 8.214285714285716e-03, 6.571428571428572e-03, 5.476190476190477e-03, 4.693877551020409e-03, 4.107142857142858e-03},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 4.380952380952381e-02, 2.190476190476191e-02, 1.460317460317461e-02, 1.095238095238095e-02, 8.761904761904762e-03, 7.301587301587303e-03, 6.258503401360545e-03},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 5.476190476190477e-02, 2.738095238095238e-02, 1.825396825396826e-02, 1.369047619047619e-02, 1.095238095238095e-02, 9.126984126984128e-03},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 6.571428571428573e-02, 3.285714285714286e-02, 2.190476190476191e-02, 1.642857142857143e-02, 1.314285714285714e-02},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 7.666666666666667e-02, 3.833333333333334e-02, 2.555555555555556e-02, 1.916666666666667e-02},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 8.761904761904762e-02, 4.380952380952381e-02, 2.920634920634921e-02},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 9.857142857142857e-02, 4.928571428571429e-02},
                                               {0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 1.095238095238095e-01}}};

    vector<vector<vector<double>>> sigmas1 (Z, vector<vector<double>> (G, vector<double> (G, 0)));

    vector<vector<double>> q = {{0,0,0,0,0,0,0,0,0,0},{1.0,0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1},{0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0}};

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////

    vector<double> h = {5,10,15,5};

    int k = 1500; //500

    vector<int> nodes = {k, 2*k, 3*k, k};

    int nxf = 0;
    for (int i = 0 ; i < R ; i++){
        nxf += nodes[i];
    }

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////

    double lb = -1; ////////// Use -1 for reflexive boundary condition
    double rb = 0;

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////

    vector<double> h_R (R);
    vector<int> nodes_R (R);
    vector<vector <double>> sigmat_R(R, vector<double> (G));
    vector<vector<vector<double>>> sigmas0_R (R, vector<vector<double>> (G, vector<double> (G)));
    vector<vector<vector<double>>> sigmas1_R (R, vector<vector<double>> (G, vector<double> (G)));
    vector<vector<double>> q_R (R, vector<double> (G));

    for(int i = 0 ; i < R ; i++){
        h_R[i] = h[i];
        nodes_R[i] = nodes[i];
        for(int j = 0 ; j < G ; j++){
            sigmat_R[i][j] = sigmat[zone_config[i]-1][j];
            q_R[i][j] = q[i][j];
            for(int k = 0; k < G ; k++){
                sigmas0_R[i][j][k] = sigmas0[zone_config[i]-1][j][k];
                sigmas1_R[i][j][k] = sigmas1[zone_config[i]-1][j][k];
            }
        }
    }
    
    return {R, Z, G, L, h_R, q_R, sigmat_R, sigmas0_R, sigmas1_R, sigmat, sigmas0, sigmas1, nodes_R, zone_config, nxf, lb, rb};
}